#!/bin/bash

# Function to run SPIM on a file and filter out some lines from output
run_spim() {
  # Use read to split the input string
  local filename
  local params
  read -r filename params <<< "$1"

  if [ ! -f "$filename" ]; then
    echo "File '$filename' does not exist."
    exit 1
  fi

  spim -file $filename $params # \
    # | grep -v \
    #   -e "SPIM Version 8.0 of January 8, 2010" \
    #   -e "Copyright 1990-2010, James R. Larus." \
    #   -e "All Rights Reserved." \
    #   -e "See the file README for a full copyright notice." \
    #   -e "Loaded: /usr/lib/spim/exceptions.s"

}

# Function to find the most recently modified .asm or .s file
find_latest_asm_file() {
  # Current directory only
  # find . -maxdepth 1 \( -name "*.asm" -o -name "*.s" \) -printf '%T@ %p\n' \
  #   | sort -k1,1nr \
  #   | awk '{print substr($0, index($0,$2))}' \
  #   | head -n 1

  # Every directory
  find ~/_ \( -name "*.asm" -o -name "*.s" \) -printf '%T@ %p\n' \
    | sort -k1,1nr \
    | awk '{print substr($0, index($0,$2))}' \
    | head -n 1
}

# _____________________________________________________________________________
# Main script logic

# Check if SPIM is installed
if ! command -v spim &> /dev/null; then
  echo "spim could not be found, please install it first."
  exit 1
fi

params="$*"

# Check if first argument does not end with .s or .asm
if [[ $1 != *.s ]] && [[ $1 != *.asm ]]; then
  latest_asm_file=$(find_latest_asm_file)
  if [ -z "$latest_asm_file" ]; then 
    echo "No .asm or .s files found."
    exit 1
  fi
  params="$latest_asm_file $params"
fi

# Run SPIM
run_spim "$params"

exit 0